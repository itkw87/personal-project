plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java-library'
    id 'eclipse-wtp'
}

repositories {
    mavenCentral()
}

dependencies {
  
    // MySQL JDBC Driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Google JSON 라이브러리
    implementation 'com.google.code.gson:gson:2.10.1'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// 자바 소스파일을 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile) {
  // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
  // $javac -encoding UTF-8..
  options.encoding = 'UTF-8'

  // 소스 파일을 작성할 때 사용할 자바 버전
  sourceCompatibility = '17'

  // 자바 클래스를 실행시킬 JVM의 최소 버전
  targetCompatibility = '17'
}

// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "personalApp-common"
    }
    jdt { 
      sourceCompatibility = 17 // 자바 17이하 버전에서 작성된 코드면 ok
      targetCompatibility = 17 // 이 프로젝트를 실행할 컴퓨터에는 자바 17버전 이상 이여야 한다는 의미
      javaRuntimeName = "JavaSE-17"
    }
}