plugins {
    // 단독적으로 실행하는 프로그램이 아니라 id 'application' -> id 'java' 로 변경함.
    id 'java'


//    id 'eclipse-wtp' // 추가함.
    id 'war' // 웹 애플리케이션의 배포 파일을 만들 때 사용할 도구가 들어 있는 플러그인 장착


}

repositories {
    mavenCentral()
}

dependencies {
    // 서브 프로젝트의 클래스를 사용하기
    implementation project(':app-common')

    // Google JSON 라이브러리
    implementation 'com.google.code.gson:gson:2.10.1'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    
    // Mybatis 라이브러리
    implementation 'org.mybatis:mybatis:3.5.13'
    
    // Servlet API
    // => providedCompile?
    //    컴파일 할 때만 사용하는 라이브러리
    //    배포할 때 제외하는 라이브러리
    //    배포받는 쪽에서 라이브러리를 갖고 있을 때 이 옵션을 사용한다.
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'

    // multipart/form-data 처리 라이브러리
    implementation 'commons-fileupload:commons-fileupload:1.5'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    implementation 'com.google.guava:guava:31.1-jre'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// 자바 소스파일을 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile) {
  // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
  // $javac -encoding UTF-8..
  options.encoding = 'UTF-8'

  // 소스 파일을 작성할 때 사용할 자바 버전
  sourceCompatibility = '17'

  // 자바 클래스를 실행시킬 JVM의 최소 버전
  targetCompatibility = '17'
}

/*
    // eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "personalApp-server"
    }
    jdt {
      sourceCompatibility = 17 // 자바 17이하 버전에서 작성된 코드면 ok
      targetCompatibility = 17 // 이 프로젝트를 실행할 컴퓨터에는 자바 17버전 이상 이여야 한다는 의미
      javaRuntimeName = "JavaSE-17"
    }

    // 자바 웹 개발 도구에서 사용할 값을 설정한다.
    wtp {
        facet {
            facet name: 'jst.java', version: '17'
            // facet name: 'jst.web', version: '4.0'
        }
        component {
            contextPath = '/'
            //deployName = 'web'
        }
    }
}

*/



// 웹 애플리케이션 배포 파일(.war)을 만들 때 사용할 기본 파일 이름을 설정한다.
// 이 이름은 웹 애플리케이션 context root 경로로도 사용된다.
war {
    archiveBaseName = "project"
}
